{"version":3,"sources":["webpack://mesto/./src/components/Card.js","webpack://mesto/./src/components/Popup.js","webpack://mesto/./src/components/PopupWithForm.js","webpack://mesto/./src/components/PopupWithImage.js","webpack://mesto/./src/components/Section.js","webpack://mesto/./src/components/UserInfo.js","webpack://mesto/./src/components/FormValidator.js","webpack://mesto/./src/components/Api.js","webpack://mesto/./src/utils/constants.js","webpack://mesto/./src/components/PopupConfirm.js","webpack://mesto/./src/pages/index.js"],"names":["Card","templateSelector","cardData","handleCardClick","handleCardDelete","handleCardLike","userId","this","_cardData","_name","name","_link","link","_likeCount","likes","length","_cardId","_id","_handleCardClick","_handleCardDelete","_handleCardLike","_cardSelector","_userId","document","querySelector","content","cloneNode","likedByUser","_likeButton","classList","add","remove","_cardImage","setAttribute","_cardElement","textContent","setLikeCount","toggle","addEventListener","_deleteButton","_getTemplate","_setCardData","_ownerId","owner","_setEventListeners","updatedLikes","some","like","_toggleLikeButton","Popup","popupElement","_popupElement","_handleEscClose","bind","_closeButton","_submitButton","evt","key","close","removeEventListener","target","contains","PopupWithForm","submitHandler","_submitHandler","_form","_inputList","Array","from","querySelectorAll","_formValues","forEach","input","value","caption","preventDefault","_getInputValues","reset","PopupWithImage","_photo","_popupPhotoTitle","title","Section","containerSelector","items","renderer","_renderedItems","_renderer","_container","item","isArray","append","prepend","UserInfo","titleElement","subtitleElement","avatarElement","_titleElement","_subtitleElement","_avatarElement","about","avatar","src","userData","FormValidator","config","form","inputList","inputElement","validity","valid","_config","_button","submitButtonSelector","buttonElement","inactiveButtonClass","_isInputInvalid","removeAttribute","errorMessageElement","errorMessageText","errorClass","inputIsInvalid","id","validationMessage","_setErrorMessage","_hideErrorMessage","inputSelector","_checkInputValidity","inputErrorClass","_toggleSubmitButton","errorInputList","errorMessageList","errorInputItem","errorMessageItem","Api","options","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","Error","status","fetch","then","_getResponseData","subtitle","method","body","JSON","stringify","cardId","avatarLink","err","console","error","formSelector","editButton","editPopup","editForm","titleField","subtitleField","addButton","addPopup","addForm","newPlaceField","newLinkField","viewerPopup","updateAvatarButton","avatarPopup","avatarForm","avatarUrlField","deletePopup","currentProfileTitle","currentProfileSubtitle","currentAvatar","waitCaption","submitCaption","PopupConfirm","_element","element","section","renderSwitch","api","authorization","userInfo","imagePopup","newEditPopup","updatedInfo","renderLoading","updateUserInfo","setUserInfo","catch","handleError","newAddPopup","cardObj","sendNewCard","cardRenderer","newAvatarPopup","newAvatarUrl","updateAvatar","newDeletePopup","cardElement","deleteCard","getCardId","card","open","removeLike","setLike","updateLikeCount","addItem","generateCard","currentUserInfo","getUserInfo","editPopupValidator","resetAllErrors","addPopupValidator","avatarPopupValidator","setEventListeners","enableValidation","all","getUserData","getInitialCards","values","initialCards","renderItems"],"mappings":"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","file":"main.js","sourcesContent":["export class Card {\r\n  constructor ({ cardData, handleCardClick, handleCardDelete, handleCardLike, userId }, templateSelector) {\r\n    // данные карточки\r\n    this._cardData = cardData;\r\n    this._name = this._cardData.name;\r\n    this._link = this._cardData.link;\r\n    this._likeCount = this._cardData.likes.length;\r\n    this._cardId = this._cardData._id;\r\n    \r\n    // колбэки\r\n    this._handleCardClick = handleCardClick;\r\n    this._handleCardDelete = handleCardDelete;\r\n    this._handleCardLike = handleCardLike;\r\n\r\n    // прочие данные\r\n    this._cardSelector = templateSelector;\r\n    this._userId = userId;\r\n  }\r\n\r\n  _getTemplate() {\r\n    const cardItem = document\r\n      .querySelector(this._cardSelector)\r\n      .content\r\n      .querySelector('.card')\r\n      .cloneNode(true);\r\n\r\n      return cardItem;\r\n  }\r\n  \r\n  _toggleLikeButton() {\r\n    if (this.likedByUser(this._userId)) {\r\n      this._likeButton.classList.add('card__like-button_active');\r\n    } else {\r\n      this._likeButton.classList.remove('card__like-button_active');\r\n    }\r\n  }\r\n\r\n\r\n  _setCardData() {\r\n    // записать атрибуты и заголовок в новую карточку\r\n    this._cardImage.setAttribute('alt', 'На фото: ' + this._name);\r\n    this._cardImage.setAttribute('src', this._link);\r\n    this._cardElement.querySelector('.card__title').textContent = this._name;\r\n    this.setLikeCount(this._cardData.likes.length);\r\n  }\r\n\r\n  _handleLikeButton() {    \r\n    this._likeButton.classList.toggle('card__like-button_active');\r\n  }\r\n\r\n  _setEventListeners() {\r\n    this._likeButton.addEventListener('click', () => { this._handleCardLike() });\r\n    this._deleteButton.addEventListener('click', () => { this._handleCardDelete() });\r\n    this._cardImage.addEventListener('click', () => { this._handleCardClick(this._cardElement) });\r\n  }\r\n\r\n  generateCard() {\r\n    // взять шаблон\r\n    this._cardElement = this._getTemplate();\r\n\r\n    // ссылки на элементы\r\n    this._likeButton = this._cardElement.querySelector('.card__like-button');    \r\n    this._cardImage = this._cardElement.querySelector('.card__photo');\r\n    this._deleteButton = this._cardElement.querySelector('.card__delete-button');\r\n\r\n    // задать даныне карточки\r\n    this._setCardData();    \r\n\r\n    // установить кнопку удаления в зависимости от пользователя\r\n    this._ownerId = this._cardData.owner._id;\r\n    if (this._ownerId !== this._userId) {\r\n      this._deleteButton.remove();\r\n    }\r\n\r\n    // установить обработчики событий\r\n    this._setEventListeners();\r\n\r\n    return this._cardElement;\r\n  }\r\n\r\n  getCardId() {\r\n    return this._cardId;\r\n  }\r\n\r\n  deleteCard() {\r\n    this._cardElement.remove();\r\n    this._cardElement = null;\r\n  }\r\n\r\n  updateLikeCount(updatedLikes) {\r\n    this._cardData.likes = updatedLikes;\r\n    this.setLikeCount(updatedLikes.length);\r\n  }\r\n\r\n  // найти лайки, оставленные пользователем\r\n\r\n  likedByUser() {\r\n    return this._cardData.likes.some(like => {\r\n      return like._id === this._userId;\r\n    })\r\n  }\r\n  \r\n  setLikeCount(likes) {\r\n    this._cardElement.querySelector('.card__like-counter').textContent = likes;\r\n    this._toggleLikeButton(this._userId);\r\n  }\r\n}","export class Popup {\r\n  constructor(popupElement) {\r\n    this._popupElement = popupElement;\r\n    this._handleEscClose = this._handleEscClose.bind(this);\r\n    this._closeButton = this._popupElement.querySelector('.popup__close-button');\r\n    this._submitButton = this._popupElement.querySelector('.popup__submit-button');\r\n  }\r\n\r\n  _handleEscClose(evt) {\r\n    if (evt.key === 'Escape') {\r\n      this.close();\r\n    }\r\n  }\r\n  \r\n  open() {\r\n    this._popupElement.classList.add('popup_active');\r\n\r\n    // установить обработчик открытия по Esc\r\n    document.addEventListener('keydown', this._handleEscClose);\r\n  }\r\n\r\n  close() {\r\n    this._popupElement.classList.remove('popup_active');\r\n\r\n    // снять обработчик закрытия по Esc\r\n    document.removeEventListener('keydown', this._handleEscClose);\r\n  }\r\n\r\n  setEventListeners() {\r\n    // обработчик закрытия по крестику\r\n    this._closeButton.addEventListener('click', () => { this.close() });\r\n\r\n    // обработчик закрытия по оверлею\r\n    this._popupElement.addEventListener('click', (evt) => {\r\n      if (evt.target.classList.contains('popup')) {\r\n        this.close();\r\n      }\r\n    });\r\n  }\r\n}","import { Popup } from './Popup.js';\r\n\r\nexport class PopupWithForm extends Popup {\r\n  constructor ({ popupElement, submitHandler }) {\r\n    super(popupElement);\r\n    this._submitHandler = submitHandler;\r\n    this._form = this._popupElement.querySelector('.popup__form');\r\n    this._submitButton = this._form.querySelector('.popup__submit-button');\r\n    this._inputList = Array.from(this._form.querySelectorAll('.popup__input'));\r\n  }\r\n\r\n  _getInputValues() {\r\n    this._formValues = {};\r\n  \r\n    this._inputList.forEach(input => {\r\n      this._formValues[input.name] = input.value;\r\n    });\r\n\r\n    return this._formValues;\r\n  }\r\n\r\n  renderLoading(caption) {\r\n    this._submitButton.textContent = caption;\r\n  }\r\n\r\n  setEventListeners() {\r\n    super.setEventListeners();\r\n\r\n    this._form.addEventListener('submit', evt => {\r\n      evt.preventDefault();\r\n      this._submitHandler(this._getInputValues());\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    super.close();\r\n    this._form.reset();\r\n  }\r\n}","import { Popup } from './Popup.js';\r\n\r\nexport class PopupWithImage extends Popup {\r\n  constructor(popupElement) {\r\n    super(popupElement);\r\n    this._popupElement = popupElement;\r\n    this._photo = this._popupElement.querySelector('.popup__photo');\r\n    this._popupPhotoTitle = this._popupElement.querySelector('.popup__photo-title');\r\n  }\r\n\r\n  open(link, title) {\r\n    super.open();    \r\n\r\n    this._photo.setAttribute('src', link);\r\n    this._photo.setAttribute('alt', `На фото: ${title}`);\r\n    this._popupPhotoTitle.textContent = title;\r\n  }\r\n}","export class Section {\r\n  constructor({ items, renderer }, containerSelector) {\r\n    this._renderedItems = items;\r\n    this._renderer = renderer;\r\n    this._container = document.querySelector(containerSelector);\r\n  }\r\n\r\n  addItem(item, isArray) {\r\n    isArray ? this._container.append(item) : this._container.prepend(item);\r\n  }\r\n\r\n  renderItems() {\r\n    this._renderedItems.forEach(item => {\r\n      this._renderer(item);\r\n    });\r\n  }\r\n}\r\n","export class UserInfo {\r\n  constructor({ titleElement, subtitleElement, avatarElement }) {\r\n    this._titleElement = titleElement;\r\n    this._subtitleElement = subtitleElement;\r\n    this._avatarElement = avatarElement;\r\n  }\r\n\r\n  getUserInfo() {\r\n    return {\r\n      name: this._titleElement.textContent,\r\n      about: this._subtitleElement.textContent,\r\n      avatar: this._avatarElement.src\r\n    }\r\n  }\r\n\r\n  setUserInfo(userData) {\r\n    this._titleElement.textContent = userData.name;\r\n    this._subtitleElement.textContent = userData.about;\r\n    this._avatarElement.src = userData.avatar;\r\n  }\r\n}","export class FormValidator {\r\n  constructor(config, form) {\r\n    this._config = config;\r\n    this._form = form;\r\n    this._button = this._form.querySelector(this._config.submitButtonSelector);\r\n  }\r\n\r\n  _isInputInvalid = (inputList) => {\r\n    return inputList.some((inputElement) => !inputElement.validity.valid);\r\n  }\r\n\r\n  _toggleSubmitButton(inputList, buttonElement, inactiveButtonClass) {\r\n    if (this._isInputInvalid(inputList)) {\r\n      buttonElement.classList.add(inactiveButtonClass);\r\n      buttonElement.setAttribute('disabled', true);\r\n    } else {\r\n      buttonElement.classList.remove(inactiveButtonClass);\r\n      buttonElement.removeAttribute('disabled');\r\n    }\r\n  };\r\n\r\n  _setErrorMessage(errorMessageElement, errorMessageText, errorClass) {\r\n    errorMessageElement.textContent = errorMessageText;\r\n    errorMessageElement.classList.add(errorClass);\r\n  };\r\n\r\n  _hideErrorMessage(errorMessageElement, errorClass) {\r\n    errorMessageElement.textContent = '';\r\n    errorMessageElement.classList.remove(errorClass);\r\n  };\r\n\r\n  _checkInputValidity(form, inputElement, errorClass) {\r\n    const inputIsInvalid = !inputElement.validity.valid;\r\n    const errorMessageElement = form.querySelector(`#${inputElement.id}-error`);\r\n\r\n    if (inputIsInvalid) {\r\n      const errorMessageText = inputElement.validationMessage;\r\n      this._setErrorMessage(errorMessageElement, errorMessageText, errorClass);\r\n    } else {\r\n      this._hideErrorMessage(errorMessageElement, errorClass);\r\n    };\r\n  };\r\n\r\n  _setEventListeners(config, form) {\r\n    const inputList = Array.from(form.querySelectorAll(config.inputSelector));\r\n\r\n    inputList.forEach(inputElement => {\r\n      inputElement.addEventListener('input', () => {\r\n        this._checkInputValidity(form, inputElement, config.errorClass, config.inputErrorClass);\r\n        this._toggleSubmitButton(inputList, this._button, config.inactiveButtonClass);\r\n      });\r\n    });\r\n    // отключаем кнопку при вызове модального окна\r\n    this._toggleSubmitButton(inputList, this._button, config.inactiveButtonClass);\r\n  };\r\n\r\n  resetAllErrors() {\r\n    // сброс ошибки и состояния кнопки сабмита\r\n    const errorInputList = Array.from(this._form.querySelectorAll('.popup__input_state_error'));\r\n    const errorMessageList = Array.from(this._form.querySelectorAll('.popup__form-error_active'));\r\n\r\n    if (errorInputList.length > 0) {\r\n      errorInputList.forEach(errorInputItem => {\r\n        errorInputItem.classList.remove(this._config.errorClass)\r\n      });\r\n    };\r\n\r\n    if (errorMessageList.length > 0) {\r\n      errorMessageList.forEach(errorMessageItem => {\r\n        errorMessageItem.classList.remove(this._config.errorClass)\r\n      });\r\n    };\r\n\r\n    this._button.classList.add(this._config.inactiveButtonClass);\r\n    this._button.setAttribute('disabled', true);\r\n  }\r\n\r\n  enableValidation() {\r\n    this._setEventListeners(this._config, this._form);\r\n  };\r\n}","export class Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  _getResponseData(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n  }\r\n\r\n  getUserData() {\r\n    return fetch(`${this._baseUrl}/users/me`, { headers: this._headers })\r\n      .then(res => this._getResponseData(res));\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, { headers: this._headers })\r\n      .then(res => this._getResponseData(res));\r\n  }\r\n\r\n  updateUserInfo(title, subtitle) {\r\n    return fetch(`${this._baseUrl}/users/me`, { \r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: title,\r\n        about: subtitle\r\n      })\r\n    })\r\n      .then(res => this._getResponseData(res));\r\n  }\r\n\r\n  sendNewCard(link, name) {\r\n    return fetch(`${this._baseUrl}/cards`, { \r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link\r\n      })\r\n    })\r\n      .then(res => this._getResponseData(res));\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    })\r\n  }\r\n\r\n  setLike(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'PUT',\r\n      headers: this._headers,\r\n    })\r\n      .then(res => this._getResponseData(res));\r\n  }\r\n\r\n  removeLike(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    })\r\n      .then(res => this._getResponseData(res));\r\n  }\r\n\r\n  updateAvatar(avatarLink) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, { \r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: avatarLink\r\n      })\r\n    })\r\n      .then(res => this._getResponseData(res));\r\n  }\r\n\r\n  handleError(err) {\r\n    console.error(err);\r\n  }\r\n}","const config = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__submit-button',\r\n  inactiveButtonClass: 'popup__submit-button_inactive',\r\n  errorClass: 'popup__form-error_active',\r\n  inputErrorClass: 'popup__input_state_error'\r\n};\r\n\r\n// ссылки на элементы формы редактирования профиля\r\nconst editButton = document.querySelector('.profile__edit-button');\r\nconst editPopup = document.querySelector('.popup_type_edit');\r\nconst editForm = editPopup.querySelector('form[name=\"edit-profile\"]');\r\nconst titleField = editPopup.querySelector('input[name=\"title\"]');\r\nconst subtitleField = editPopup.querySelector('input[name=\"subtitle\"]');\r\n\r\n// ссылки на элементы формы добавления карточки\r\nconst addButton = document.querySelector('.profile__add-button');\r\nconst addPopup = document.querySelector('.popup_type_add');\r\nconst addForm = addPopup.querySelector('form[name=\"add-place\"]');\r\nconst newPlaceField = addPopup.querySelector('input[name=\"placeName\"]');\r\nconst newLinkField = addPopup.querySelector('input[name=\"placeLink\"]');\r\n\r\n// ссылки на элементы просмотрщика фото \r\nconst viewerPopup = document.querySelector('.popup_type_viewer');\r\nconst popupPhoto = viewerPopup.querySelector('.popup__photo');\r\n\r\n// ссфлки на элементы окна обновления аватара\r\nconst updateAvatarButton = document.querySelector('.profile__avatar-button');\r\nconst avatarPopup = document.querySelector('.popup_type_update-avatar');\r\nconst avatarForm = document.querySelector('form[name=\"update-avatar\"]');\r\nconst avatarUrlField = document.querySelector('input[name=\"avatarLink\"]');\r\n\r\n// ссылки на элементы подтверждения удаления\r\nconst deletePopup = document.querySelector('.popup_type_delete');\r\n\r\n// ссылки для текущих данных профиля\r\nconst currentProfileTitle = document.querySelector('.profile__title');\r\nconst currentProfileSubtitle = document.querySelector('.profile__subtitle');\r\nconst currentAvatar = document.querySelector('.profile__avatar');\r\n\r\n// прочие глобальные ссылки\r\nconst currentUserId = '82c3226c62f91c52d5321c73';\r\nconst waitCaption = 'Сохранение...';\r\nconst submitCaption = 'Сохранить';\r\n\r\nexport {\r\n  config,\r\n  editButton,\r\n  editPopup,\r\n  editForm,\r\n  titleField,\r\n  subtitleField,\r\n  addButton,\r\n  addPopup,\r\n  addForm,\r\n  newPlaceField,\r\n  newLinkField,\r\n  viewerPopup,\r\n  popupPhoto,\r\n  currentProfileTitle,\r\n  currentProfileSubtitle,\r\n  currentAvatar,\r\n  deletePopup,\r\n  currentUserId,\r\n  avatarPopup,\r\n  updateAvatarButton,\r\n  avatarForm,\r\n  avatarUrlField,\r\n  waitCaption,\r\n  submitCaption\r\n}","import { Popup } from './Popup.js';\r\n\r\nexport class PopupConfirm extends Popup {\r\n  constructor({ popupElement, submitHandler }) {\r\n    super(popupElement);\r\n    this._submitHandler = submitHandler;\r\n  }\r\n\r\n  setEventListeners() {\r\n    super.setEventListeners();\r\n    \r\n    this._form = this._popupElement.querySelector('.popup__form');\r\n    this._form.addEventListener('submit', evt => {      \r\n      this._submitHandler(evt, this._element);\r\n    });\r\n  }\r\n\r\n  open(element) {\r\n    // this._element - любой элемент, передаваемый на обработку классом\r\n    this._element = element;\r\n    super.open();\r\n  }\r\n}","import './index.css';\r\n\r\nimport { Card } from '../components/Card.js';\r\nimport { PopupWithForm } from '../components/PopupWithForm.js';\r\nimport { PopupWithImage } from '../components/PopupWithImage.js';\r\nimport { Section } from '../components/Section.js';\r\nimport { UserInfo } from '../components/UserInfo.js';\r\nimport { FormValidator } from '../components/FormValidator.js';\r\nimport { Api } from '../components/Api.js';\r\nimport {\r\n  config,\r\n  editButton,\r\n  editPopup,\r\n  editForm,\r\n  titleField,\r\n  subtitleField,\r\n  addButton,\r\n  addPopup,\r\n  addForm,\r\n  newPlaceField,\r\n  newLinkField,\r\n  viewerPopup,\r\n  currentProfileTitle,\r\n  currentProfileSubtitle,\r\n  currentAvatar,\r\n  deletePopup,\r\n  currentUserId,\r\n  avatarPopup,\r\n  updateAvatarButton,\r\n  avatarForm,\r\n  avatarUrlField,\r\n  waitCaption,\r\n  submitCaption\r\n} from '../utils/constants.js';\r\nimport { PopupConfirm } from '../components/PopupConfirm';\r\n\r\n// ГЛОБАЛЬНЫЕ ПЕРЕМЕННЫЕ\r\n\r\n// переменная будет принимать экземпляр класса Section\r\nlet section = {};\r\n\r\n// переключатель раскладки карточек\r\n// используется в классе Section для выбор метода добавления карточек в секцию\r\n// при true карточки раскладываются методом .append(), для правильной расстановки массива карточек с сервера\r\n// при false новые карточки добавляются в начало секции\r\nlet renderSwitch = true;\r\n\r\n// ИНИЦИАЛИЗАЦИЯ API\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-19',\r\n  headers: {\r\n    authorization: 'deb0aa6f-32ec-48b3-9746-6ea746dde45e',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// создание экземпляра информации о пользователе\r\n\r\nconst userInfo = new UserInfo({\r\n  titleElement: currentProfileTitle,\r\n  subtitleElement: currentProfileSubtitle,\r\n  avatarElement: currentAvatar\r\n});\r\n\r\n// СОЗДАНИЕ ЭКЗЕМПЛЯРОВ МОДАЛЬНЫХ ОКОН\r\n// 1. Окно просмотра фото\r\n\r\nconst imagePopup = new PopupWithImage(viewerPopup);\r\n\r\n// 2. Окно формы обновления профиля\r\n// обработчик отправки формы обновления профиля\r\n\r\nconst handleProfileEditSubmit = () => {\r\n  const updatedInfo = {\r\n    name: titleField.value,\r\n    about: subtitleField.value\r\n  }\r\n\r\n  newEditPopup.renderLoading(waitCaption);\r\n\r\n  api.updateUserInfo(updatedInfo.name, updatedInfo.about)\r\n    .then(updatedInfo => {\r\n      userInfo.setUserInfo(updatedInfo);\r\n      newEditPopup.close();\r\n    })\r\n    .catch(err => api.handleError(err));\r\n}\r\n\r\n// создание экземпляра формы обновления профиля\r\n\r\nconst newEditPopup = new PopupWithForm({\r\n  popupElement: editPopup,\r\n  submitHandler: handleProfileEditSubmit\r\n});\r\n\r\n// вызов окна редактирования профиля\r\nconst toggleEditPopup = () => {\r\n  const currentUserInfo = userInfo.getUserInfo();\r\n\r\n  titleField.value = currentUserInfo.name;\r\n  subtitleField.value = currentUserInfo.about;\r\n\r\n  newEditPopup.renderLoading(submitCaption);\r\n  editPopupValidator.resetAllErrors();\r\n  \r\n  newEditPopup.open();\r\n}\r\n\r\n// 3. Окно добавления новой карточки\r\n// обработчик отправки формы добавления карточки\r\n\r\nconst handleCardAddSubmit = () => {\r\n  const cardObj = {\r\n    name: newPlaceField.value,\r\n    link: newLinkField.value,\r\n  }\r\n\r\n  newAddPopup.renderLoading(waitCaption);\r\n\r\n  api.sendNewCard(cardObj.link, cardObj.name)\r\n    .then(item => {\r\n      cardRenderer(item);\r\n      newAddPopup.close();\r\n    })\r\n    .catch(err => api.handleError(err));\r\n}\r\n\r\n// создание экземпляра формы добавления карточки\r\n\r\nconst newAddPopup = new PopupWithForm({\r\n  popupElement: addPopup,\r\n  submitHandler: handleCardAddSubmit\r\n});\r\n\r\n\r\n// вызов окна добавления карточки\r\nconst toggleAddPopup = () => {\r\n  addForm.reset();\r\n  newAddPopup.renderLoading(submitCaption);\r\n  addPopupValidator.resetAllErrors();\r\n  newAddPopup.open();\r\n}\r\n\r\n// 4. Подтверждение удаления карточки\r\n// обработчик нажатия кнопки подтверждения\r\n\r\nconst handleDeleteConfirmation = (evt, cardElement) => {\r\n  evt.preventDefault();\r\n\r\n  api.deleteCard(cardElement.getCardId())\r\n    .then(() => {\r\n      cardElement.deleteCard();\r\n      newDeletePopup.close();\r\n    })\r\n    .catch(err => api.handleError(err))\r\n}\r\n\r\n// 5. Окно обновления аватара\r\n// обработчик отправки формы обновления аватара\r\nconst handleAvatarUpdate = () => {\r\n  // взять введенное значение\r\n  const newAvatarUrl = avatarUrlField.value;\r\n  // установить надпись ожидания на кнопке\r\n  newAvatarPopup.renderLoading(waitCaption);\r\n  // отправить данные на сервер\r\n  api.updateAvatar(newAvatarUrl)\r\n    .then(userData => {\r\n      currentAvatar.src = userData.avatar;\r\n      newAvatarPopup.close();\r\n    })\r\n    .catch(err => api.handleError(err))\r\n}\r\n\r\n// создание экземпляра окна обновления аватара\r\nconst newAvatarPopup = new PopupWithForm({\r\n  popupElement: avatarPopup,\r\n  submitHandler: handleAvatarUpdate\r\n});\r\n\r\n// вызов окна редактирования аватара\r\n\r\nconst toggleEditAvatarPopup = () => {\r\n  avatarForm.reset();\r\n  newAvatarPopup.renderLoading(submitCaption);\r\n  avatarPopupValidator.resetAllErrors();  \r\n  newAvatarPopup.open();\r\n}\r\n\r\n// создание экземпляра подтверждения удаления\r\n\r\nconst newDeletePopup = new PopupConfirm({\r\n  popupElement: deletePopup,\r\n  submitHandler: handleDeleteConfirmation\r\n});\r\n\r\n// функция отрисовки карточки\r\n\r\nconst cardRenderer = item => {\r\n  {\r\n    const card = new Card({\r\n      cardData: item,\r\n      handleCardClick: () => {\r\n        imagePopup.open(item.link, item.name);\r\n      },\r\n      handleCardDelete: () => {\r\n        newDeletePopup.open(card);\r\n      },\r\n      handleCardLike: () => {\r\n        const cardId = item._id;\r\n        const toggleLike = card.likedByUser() ? api.removeLike(cardId) : api.setLike(cardId);\r\n\r\n        toggleLike.then(item => {\r\n          card.updateLikeCount(item.likes);\r\n        })\r\n        .catch(err => api.handleError(err))\r\n      },\r\n      userId: currentUserId\r\n    },\r\n    '.card-template');\r\n\r\n    section.addItem(card.generateCard(), renderSwitch);\r\n  }\r\n}\r\n\r\n// ДОБАВЛЕНИЕ СЛУШАТЕЛЕЙ СОБЫТИЙ\r\n\r\n// вызов формы редактирования профиля\r\neditButton.addEventListener('click', toggleEditPopup);\r\n\r\n// вызов формы добавления карточки\r\naddButton.addEventListener('click', toggleAddPopup);\r\n\r\n// вызов формы обновления аватара\r\nupdateAvatarButton.addEventListener('click', toggleEditAvatarPopup);\r\n\r\n// модальные окна\r\nnewEditPopup.setEventListeners();\r\nnewAddPopup.setEventListeners();\r\nimagePopup.setEventListeners();\r\nnewDeletePopup.setEventListeners();\r\nnewAvatarPopup.setEventListeners();\r\n\r\n// ВАЛИДАЦИЯ\r\n\r\nconst editPopupValidator = new FormValidator(config, editForm);\r\neditPopupValidator.enableValidation();\r\n\r\nconst addPopupValidator = new FormValidator(config, addForm);\r\naddPopupValidator.enableValidation();\r\n\r\nconst avatarPopupValidator = new FormValidator(config, avatarForm);\r\navatarPopupValidator.enableValidation();\r\n\r\n// ЗАГРУЗКА ДАННЫХ СТРАНИЦЫ\r\n\r\nPromise.all([\r\n  api.getUserData(),\r\n  api.getInitialCards()\r\n])    \r\n.then(values => {\r\n  const [userData, initialCards] = values;\r\n  // обработка ответа getUserData\r\n  userInfo.setUserInfo(userData);\r\n\r\n  // обработка ответа getInitialCards\r\n  section = new Section(\r\n    {\r\n      items: initialCards,\r\n      renderer: cardRenderer\r\n    },\r\n    '.content');\r\n    section.renderItems();\r\n\r\n    // переключить переключатель, т.к. в дальнейшем будут добавляться только новые карточки\r\n    renderSwitch = false;\r\n})\r\n.catch(err => {\r\n  api.handleError(err);\r\n})\r\n\r\nexport { addForm, editForm }"],"sourceRoot":""}